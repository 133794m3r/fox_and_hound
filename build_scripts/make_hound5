#!/bin/bash
# Macarthur Inbody <mdi2455@email.vccs.edu>
# AGPLv3
# 2019 - 
#
# Hound5 AKA the one where they use diff to find the one line that's different
# between two files.
# It's a simple diff thing but since there's a ton of lines they can do this two
# ways. The first is to just do `diff file1 file2`.
# Other is to do `cat file1 file2 |sort |uniq -u`
# diff is way easier and the correct way.

#the dictionary file that we're using to get our words from.
#this will be set to a global variable DICTIONARY from the main script once the whole
#build system is done.
dictionary='/usr/share/dict/american-english';
#get the length of the dictionary file.
#in the future this'll be calculated once from the main build script and then the string
#DICTIONARY_LEN will be set to this value.
dictionary_len=$( wc -l '/usr/share/dict/american-english' );
#set the encoding. In future versions this'll be hardcoded from the main script.
#this is to make sure tha all hashes are b32 encoded.
HASH_ENCODING='b32';
#the current level we're on.
level=5;

#this reads in the functions that are in the library.
source build_functions;

#the filename we're going to use. It's an empty string by default.
filename='';
#The prefixes for the files
filename_arr=('.-' '-~' '-.' '.~' 'this file has spaces' 'spaces in the name' 'INHERE' 'README' 'INSIDETHIS' 'FILE' 'SECRET');
#we get the length of the files.
filename_arr_len=${#filename_arr[*]};
#the first filename we're going to be sending data to.
filename_1=${filename_arr[ $(( $RANDOM % $filename_arr_len ))]};
#the second file data is going to be sent to.
filename_2=${filename_arr[ $(( $RANDOM % $filename_arr_len ))]};
#to make sure that they're not equal to eachother a quick while loop to pick another one randomly.
while [ "$filename_2" = "$filename_1" ];do
    filename_2=${filename_arr[ $(( $RANDOM % $filename_arr_len ))]};
done
