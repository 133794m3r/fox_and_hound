#!/bin/bash
#Hound 7 requires them to write their first bash script to bruteforce a pin and then cat that data to a program which'll give them the data back. But it only accepts the pin as a base64 encoded file.
#Macarthur Inbody <mdi2455@email.vccs.edu> (C) 2019-

function hash(){
    printf '%s' $1 | openssl dgst -sha1 -binary | base64 | tr -d '=' | tr '\/' '_' | tr '+' '-';
}
function sed_it(){
    sed -i "s/$1/$2/" ../c_programs/givemethepin-$pin_suffix.c;
}
pin_suffix='edited';
c_program_src="givemethepin-$pin_suffix.c";
c_program_srcdir="../c_programs"
CORRECT_PIN=$(( $RANDOM % 150 ));
THE_FLAG=$( hash 'Finny Fox' );
#zd1ojg4tj43yx7k5jkhfdtxe6u1b6kwr
INCORRECT_FLAG1=$( hash $RANDOM );
INCORRECT_FLAG2=$( hash $RANDOM );
cp ../c_programs/'givemethepin.c' ../c_programs/givemethepin-$pin_suffix.c;
#We had to sed the flags to the file itself including false flags.

sed_it '<correct_pin_placeholder>' "$CORRECT_PIN";
sed_it '<the_flag_placeholder>' "$THE_FLAG"
sed_it '<incorrect_flag_placeholder1 > ' "$INCORRECT_FLAG1"
sed_it '<incorrect_flag_placeholder2 > ' "$INCORRECT_FLAG2"
#cross-compile the program
#comment out the lines that don't have armlinux and comment the arm-linux to do a native build.
arm-linux-gnueabihf-gcc-8 -g1 -O3 -fweb -fgcse-las -fgcse-sm -fgcse-after-reload -fpeel-loops "$c_program_srcdir/$c_program_src" -o "$c_program_srcdir/built/givemethepin";
arm-linux-gnueabihf-gcc-8 -g1 -O3 -fweb -fgcse-las -fgcse-sm -fgcse-after-reload -fpeel-loops "$c_program_srcdir/b64_tester.c" -o "$c_program_srcdir/built/b64";
#gcc -march=native -mtune=native -g1 -O3 -fweb -fgcse-las -fgcse-sm -fgcse-after-reload -fpeel-loops "$c_program_srcdir/$c_program_src" -o "$c_program_srcdir/built/givemethepin";
#gcc -march=native -mtune=native -g1 -O3 -fweb -fgcse-las -fgcse-sm -fgcse-after-reload -fpeel-loops "$c_program_srcdir/b64_tester" -o "$c_program_srcdir/built/b64";
#The group only has execute permissions to avoid them reading the file in and trying to debug it. Plus every other use has no permissions to avoid them from wasting cpucycles on the rpi.
chmod 710 "$c_program_srcdir/built/givemethepin";
#For right now group/user is numeric to keep things simpler when cross-building.
sudo chgrp 1008 "$c_program_srcdir/built/givemethepin";
#We don't want them accidently reading a bunch of binary data into the terminal.
chmod 711  "$c_program_srcdir/built/b64";

#The programs go into the /usr/local/bin
