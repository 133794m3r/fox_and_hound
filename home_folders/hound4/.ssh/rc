#!/bin/sh
#The following is the smushed and ready to be echoed out "M" header with all of 
#the color information intact.
#HOUND='hound zero';
GOALSTR="It's in a hidden directory, and it's"
GOALSTR2="in the only \e[1;4mASCII TEXT\e[0;97m file."
#This is included to help me easily revert it to change the textbox later.
#I have ~362 characters to work with within it. It should be way more than enough
#for pretty much everything that I'll need to do as that's 80words. I'll create
#smaller versions of the textbox for earlier flags. Small box should be ~100 chars.

#color table: 31=red fg, 33=yellow fg, 97=white fg. 1=bold,4=underlined.
#reset;
clear;

#remove later.
#old colored version
#current version.
#I start off by clearing all formatting so that I can be sure that it'll show up
#the way that I want. Then I go into using escape codes to colorize it to look
#way nicer. The text at the top will likely just be MECC.edu/Cyber or something
#similar.
echo '\e[0m\e[31m                        /#\
\e[31m                       /###\
\e[31m                      /#####\
\e[31m                     /#######\
\e[31m                    /#########\
\e[31m                   /##########/              \e[1m*****\e[1;4mWelcome to the Hunt @ MECC\e[0;1m****\e[0m
\e[31m                  /##########/  /\         \e[33m+=====================================+
\e[31m                 /##########/  /##\        \e[33m|\e[97m You are on currently on '$USER'      \e[33m|
\e[31m                /##########/  /###/  _     \e[33m|\e[97m You goal is to find the flag.       \e[33m|
\e[31m               /##########/__/###/  /#\    \e[33m|\e[97m '$GOALSTR'\e[33m|
\e[31m              /#################/  /###\   \e[33m|\e[97m '$GOALSTR2'        \e[33m|
\e[31m             /#################/  /#####\  \e[33m|\e[97m Some interesting commands to try    \e[33m|
\e[31m           /##################/__/#######\  \e[33m|\e[97m cd,ls,cat,file,man,info,grep,find  \e[33m|
\e[31m          /###############################\  \e[33m|\e[97mIf \e[1;4myou\e[0;97m mess up: reset_ctf          \e[33m|
\e[31m         /#######/\########################\ \e[33m|\e[97mIf \e[1;4mit\e[0;97m messes up: blame -debug      \e[33m|
\e[31m        /#######/  \########################\ \e[33m\ \e[97;1;4mLost\e[0;97m? type: \e[1;4mtakemeback\e[0;97m           \e[33m|
\e[31m       /#######/    \########################\ \e[33m+==================================+
\e[31m      /#######/      \#############/\#########\
\e[31m     /#######/        \###########/  \#########\
\e[31m    /#######/          \#########/    \#########\
\e[31m   /#######/            \#######/      \#########\
\e[31m  /#######/              \#####/        \#########\
\e[31m /#######/                \###/          \#########\
\e[31m/#######/                  \#/            \#########\
\e[31m--------                    -              ----------'
echo '\e[0m';

