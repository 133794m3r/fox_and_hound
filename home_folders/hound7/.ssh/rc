#!/bin/bash
#The following is the smushed and ready to be echoed out "M" header with all of 
#the color information intact.
#HOUND='hound zero';
GOALSTR='Find the flag in a file.';
#to make sure that the terminal's clear
#clear;
#to make sure that the logos will fit on the screen at one time with the user's 
#prompt. I also went over by three characters in the columns so I have to resize it
#for that also.
#to make sure it doesn't output pointless lines.
#resize -s 27 83 &>/dev/null;

#This is included to help me easily revert it to change the textbox later.
#I have ~362 characters to work with within it. It should be way more than enough
#for pretty much everything that I'll need to do as that's 80words. I'll create
#smaller versions of the textbox for earlier flags. Small box should be ~100 chars.

#color table: 31=red fg, 33=yellow fg, 97=white fg. 1=bold,4=underlined.
ID=1000;
#remove later.
#old colored version
#current version.
#I start off by clearing all formatting so that I can be sure that it'll show up
#the way that I want. Then I go into using escape codes to colorize it to look
#way nicer. The text at the top will likely just be MECC.edu/Cyber or something
#similar.
printf '\e[0m\e[31m                        /#\
\e[31m                       /###\
\e[31m                      /#####\
\e[31m                     /#######\            \e[1m*****\e[1;4mWelcome to the Hunt @ MECC\e[1m****\e[0m
\e[31m                    /#########\          \e[1;4mAll flags are b32 encoded.\e[0m
\e[31m                   /##########/       \e[33m+============================================+
\e[31m                  /##########/  /\    \e[33m| \e[97mYou are on currently on '$USER'! The goal   \e[33m|
\e[31m                 /##########/  /##\    \e[33m\ \e[97m this time is to use join the two files.  \e[33m|
\e[31m                /##########/  /###/  _  \e[33m\ \e[97mThe password is on the line with the num.\e[33m|  
\e[31m               /##########/__/###/  /#\  \e[33m\ \e[97m'$ID'. Files may need to be \e[1;4msort\e[0;97med. Then \e[33m|
\e[31m              /#################/  /###\  \e[33m\ \e[97m \e[1;4mgrep\e[0;97m the correct line to get the flag.\e[33m|
\e[31m             /#################/  /#####\  \e[33m\ \e[97mSome interesting commands commands    \e[33m|
\e[31m           /##################/__/#######\  \e[33m\ \e[97mls, cat, join, grep, sort, man, info\e[33m |
\e[31m          /###############################\  \e[33m\ \e[97mIf \e[1;4myou\e[0;97m mess up: reset_ctf           \e[33m| 
\e[31m         /#######/\########################\  \e[33m\ \e[97mIf \e[1;4mit\e[0;97m messes up: blame -debug      \e[33m|
\e[31m        /#######/  \########################\  \e[33m\ \e[97;1;4mLost\e[0;97m? type: \e[1;4mtakemeback\e[0;97m            \e[33m|
\e[31m       /#######/    \########################\  \e[33m| \e[97mShow this help again: \e[1;4mshowbanner\e[0;97m \e[33m|
\e[31m      /#######/      \#############/\#########\ \e[33m+==================================+
\e[31m     /#######/        \###########/  \#########\
\e[31m    /#######/          \#########/    \#########\
\e[31m   /#######/            \#######/      \#########\
\e[31m  /#######/              \#####/        \#########\
\e[31m /#######/                \###/          \#########\
\e[31m/#######/                  \#/            \#########\
\e[31m--------                    -              ----------'
echo '\e[0m';

#dirname=$(echo "$SSH_CONNECTION$USER" | openssl dgst -sha1 -binary | base64 | tr '+\/=' '-_-');
#rm -rf /tmp/$dirname;
#mkdir /tmp/$dirname;
#cp Read.me /tmp/foxhunt/$dirname;
#cd /tmp/foxhunt/$dirname;

